name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Set CFLAGS and CXXFLAGS for specific targets
        run: |
          if [[ ${{ matrix.platform.target }} == "ppc64le" || ${{ matrix.platform.target }} == "aarch64" || ${{ matrix.platform.target }} == "armv7" ]]; then
            echo "CFLAGS=-std=c99" >> $GITHUB_ENV
            echo "CXXFLAGS=-std=c++11" >> $GITHUB_ENV
          fi
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-latest
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, macos, sdist]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-x86_64
          path: wheels-linux-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-x86
          path: wheels-linux-x86
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-aarch64
          path: wheels-linux-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-armv7
          path: wheels-linux-armv7
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-ppc64le
          path: wheels-linux-ppc64le
      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos-x86_64
          path: wheels-macos-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos-aarch64
          path: wheels-macos-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: wheels-sdist
          path: wheels-sdist
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-linux-x86_64/* wheels-linux-x86/* wheels-linux-aarch64/* wheels-linux-armv7/* wheels-linux-ppc64le/* wheels-macos-x86_64/* wheels-macos-aarch64/* wheels-sdist/*